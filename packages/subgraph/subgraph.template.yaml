specVersion: 0.0.4
description: Subgraph that tracks markets data
repository: {{& repository}}
schema:
  file: ./schema.graphql
features:
  - fullTextSearch
  - grafting
dataSources:
  - kind: ethereum/contract
    name: MarketFactory
    network: {{network}}
    source:
      abi: MarketFactory
      address: "{{MarketFactory.address}}"
      startBlock: {{MarketFactory.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      abis:
        - name: MarketFactory
          file: ./contracts/abis/MarketFactory.json
        - name: Market
          file: ./contracts/abis/Market.json
        - name: Realitio
          file: ./contracts/abis/Realitio.json
      entities:
        - Market
        - Event
      eventHandlers:
        - event: NewMarket(indexed address,indexed bytes32,address)
          handler: handleNewMarket
      callHandlers:
        - function: createMarket(string,string,address,uint256,uint256,uint256,uint256,(uint256,string,uint32)[],uint16[])
          handler: handleCreateMarket
      file: ./src/mappings/MarketFactory.ts
      language: wasm/assemblyscript
  - kind: ethereum/contract
    name: RealitioV3
    network: {{network}}
    source:
      abi: Realitio
      address: "{{RealitioV3.address}}"
      startBlock: {{RealitioV3.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      abis:
        - name: Realitio
          file: ./contracts/abis/Realitio.json
        - name: Market
          file: ./contracts/abis/Market.json
      entities:
        - Event
        - Bet
      eventHandlers:
        - event: LogNewAnswer(bytes32,indexed bytes32,bytes32,indexed address,uint256,uint256,bool)
          handler: handleNewAnswer
        - event: LogFinalize(indexed bytes32,indexed bytes32)
          handler: handleFinalize
        - event: LogNotifyOfArbitrationRequest(indexed bytes32,indexed address)
          handler: handleArbitrationRequest
        - event: LogFundAnswerBounty(indexed bytes32,uint256,uint256,indexed address)
          handler: handleFundAnswerBounty
        - event: LogReopenQuestion(indexed bytes32,indexed bytes32)
          handler: handleReopenQuestion
      file: ./src/mappings/Realitio.ts
      language: wasm/assemblyscript
  - kind: ethereum/contract
    name: ClassicCurate
    network: {{network}}
    source:
      abi: GeneralizedTCR
      address: "{{ClassicCurate.address}}"
      startBlock: {{ClassicCurate.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      abis:
        - name: GeneralizedTCR
          file: ./contracts/abis/GeneralizedTCR.json
      entities:
        - Market
        - MarketCuration
        - Registry
      eventHandlers:
        - event: ItemSubmitted(indexed bytes32,indexed address,indexed uint256,bytes)
          handler: handleItemSubmitted
        - event: ItemStatusChange(indexed bytes32,indexed uint256,indexed uint256,bool,bool)
          handler: handleItemStatusChange
        - event: MetaEvidence(indexed uint256,string)
          handler: handleMetaEvidence
      file: ./src/mappings/GeneralizedTCR.ts
      language: wasm/assemblyscript
  - kind: ethereum/contract
    name: ContentCurate
    network: {{network}}
    source:
      abi: GeneralizedTCR
      address: "{{ContentCurate.address}}"
      startBlock: {{ContentCurate.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      abis:
        - name: GeneralizedTCR
          file: ./contracts/abis/GeneralizedTCR.json
      entities:
        - SVGAd
        - CurateSVGAdItem
      eventHandlers:
        - event: ItemStatusChange(indexed bytes32,indexed uint256,indexed uint256,bool,bool)
          handler: handleItemStatusChange
        - event: ItemSubmitted(indexed bytes32,indexed address,indexed uint256,bytes)
          handler: handleItemSubmitted
      file: ./src/mappings/ContentCurate.ts
      language: wasm/assemblyscript
  - kind: ethereum/contract
    name: TechnicalCurate
    network: {{network}}
    source:
      abi: GeneralizedTCR
      address: "{{TechnicalCurate.address}}"
      startBlock: {{TechnicalCurate.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      abis:
        - name: GeneralizedTCR
          file: ./contracts/abis/GeneralizedTCR.json
      entities:
        - SVGAd
        - CurateSVGAdItem
      eventHandlers:
        - event: ItemStatusChange(indexed bytes32,indexed uint256,indexed uint256,bool,bool)
          handler: handleItemStatusChange
        - event: ItemSubmitted(indexed bytes32,indexed address,indexed uint256,bytes)
          handler: handleItemSubmitted
      file: ./src/mappings/TechnicalCurate.ts
      language: wasm/assemblyscript
  - kind: ethereum/contract
    name: KeyValue
    network: {{network}}
    source:
      abi: KeyValue
      address: "{{KeyValue.address}}"
      startBlock: {{KeyValue.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      abis:
        - name: KeyValue
          file: ./contracts/abis/KeyValue.json
      entities:
        - Market
      eventHandlers:
        - event: SetValue(string,string)
          handler: handleSetValue
      file: ./src/mappings/KeyValue.ts
      language: wasm/assemblyscript
  - kind: ethereum/contract
    name: SVGFactory
    network: {{network}}
    source:
      abi: SVGFactory
      address: "{{SVGFactory.address}}"
      startBlock: {{SVGFactory.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      abis:
        - name: SVGFactory
          file: ./contracts/abis/SVGFactory.json
      entities:
        - SVGAd
      eventHandlers:
        - event: NewAd(indexed address)
          handler: handleNewAd
      # callHandlers:
      #   - function: createAd(string,string)
      #     handler: handleCreateAd
      file: ./src/mappings/SVGFactory.ts
      language: wasm/assemblyscript
  - kind: ethereum/contract
    name: Billing
    network: {{network}}
    source:
      abi: Billing
      address: "{{Billing.address}}"
      startBlock:  {{Billing.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      abis:
        - name: Billing
          file: ./contracts/abis/Billing.json
      entities:
        - Bid
        - Market
      eventHandlers:
        - event: BalanceChanged(indexed address,uint256)
          handler: handleBalanceChanged
      file: ./src/mappings/Billing.ts
      language: wasm/assemblyscript
  - kind: ethereum/contract
    name: FirstPriceAuction
    network: {{network}}
    source:
      abi: FirstPriceAuction
      address: "{{FirstPriceAuction.address}}"
      startBlock:  {{FirstPriceAuction.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      abis:
        - name: FirstPriceAuction
          file: ./contracts/abis/FirstPriceAuction.json
      entities:
        - Bid
        - Market
      eventHandlers:
        - event: BidUpdate(indexed address,indexed address,bytes32,indexed uint256,uint256)
          handler: handleBidUpdate
        - event: NewHighestBid(indexed address,address,bytes32)
          handler: handleNewHighestBid
      file: ./src/mappings/FirstPriceAuction.ts
      language: wasm/assemblyscript
  - kind: ethereum/contract
    name: CurateProxySVG
    network: {{network}}
    source:
      abi: CurateProxySVG
      address: "{{CurateProxySVG.address}}"
      startBlock: {{CurateProxySVG.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      abis:
        - name: CurateProxySVG
          file: ./contracts/abis/CurateProxySVG.json
        - name: GeneralizedTCR
          file: ./contracts/abis/GeneralizedTCR.json
      entities:
        - CurateSVGAdItem
      eventHandlers:
        - event: newItemMapped(indexed address,indexed bytes32,bytes32,bytes32)
          handler: handleNewItemMapped
      file: ./src/mappings/CurateProxySVG.ts
      language: wasm/assemblyscript
templates:
  - name: Market
    kind: ethereum/contract
    network: {{network}}
    source:
      abi: Market
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ./src/mappings/Market.ts
      entities:
        - Market
        - Bet
        - Player
        - Event
        - Manager
        - MarketReferral
        - Attributions
      abis:
        - name: Market
          file: ./contracts/abis/Market.json
        - name: Manager
          file: ./contracts/abis/Manager.json
      eventHandlers:
        - event: QuestionsRegistered(bytes32[])
          handler: handleQuestionsRegistered
        - event: Prizes(uint16[])
          handler: handlePrizesRegistered
        - event: PlaceBet(indexed address,indexed uint256,indexed bytes32,bytes32[])
          handler: handlePlaceBet
        - event: FundingReceived(indexed address,uint256,string)
          handler: handleFundingReceived
        - event: BetReward(indexed uint256,uint256)
          handler: handleBetReward
        - event: ManagementReward(address,uint256)
          handler: handleManagerReward
        - event: Attribution(indexed address)
          handler: handleAttribution
        - event: Transfer(indexed address,indexed address,indexed uint256)
          handler: handleTransfer
        - event: RankingUpdated(indexed uint256,uint256,uint256)
          handler: handleRankingUpdated
  - name: Manager
    kind: ethereum/contract
    network: {{network}}
    source:
      abi: Manager
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ./src/mappings/Manager.ts
      entities:
        - Manager
        - MarketReferral
        - Attributions
      abis:
        - name: Manager
          file: ./contracts/abis/Manager.json
      callHandlers:
        - function: claimReferralReward(address)
          handler: handleClaimReferralReward
        - function: distributeRewards()
          handler: handleDistributeRewards