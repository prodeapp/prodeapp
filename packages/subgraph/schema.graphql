type Tournament @entity {
  id: ID!
  name: String!
  symbol: String!
  uri: String!
  ownwer: Bytes!
  closingTime: BigInt!
  creationTime: BigInt!
  price: BigInt!
  pool: BigInt!
  managementFee: BigInt
  manager: Bytes!
  players: [Player!]! @derivedFrom(field: "tournaments")
  matches: [Match!]! @derivedFrom(field: "tournament")
  bets: [Bet!]! @derivedFrom(field: "tournament")
  funders: [Funder!] @derivedFrom(field: "tournaments")
}

type Match @entity {
  "tournament-questionID"
  id: ID!
  tournament: Tournament!
  result: BigInt
}

type Player @entity {
  id: ID!
  amountBeted: BigInt!
  pricesReceived: BigInt!
  tournaments: [Tournament!]
  bets: [Bet!]! @derivedFrom(field: "player")
}

type Bet @entity {
  """tournamentId-tokenID"""
  id: ID!
  player: Player!
  tournament: Tournament!
  tokenID: BigInt!
  ranking: BigInt
  points: BigInt!
  results: [BigInt!]!
  count: BigInt!
  claim: Boolean!
  reward: BigInt!
}

type Funder @entity {
  id: ID!
  amount: BigInt!
  tournaments: [Tournament!]!
  messages: [String!]
}